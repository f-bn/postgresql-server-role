---
- name: Ensure PostgreSQL directory hierarchies are created
  ansible.builtin.file:
    path: "{{ item.path }}"
    state: directory
    owner: "{{ item.owner }}"
    group: "{{ item.group }}"
    mode: "{{ item.mode }}"
  with_items:
    - { path: "{{ postgresql_root_dir }}", owner: postgres, group: postgres, mode: '0700' }
    - { path: "{{ postgresql_home_dir }}", owner: postgres, group: postgres, mode: '0700' }
    - { path: "{{ postgresql_data_dir }}", owner: postgres, group: postgres, mode: '0700' }
    - { path: "{{ postgresql_backups_dir }}", owner: postgres, group: postgres, mode: '0700' }
    - { path: "{{ postgresql_config_dir }}", owner: root, group: postgres, mode: '0750' }

- name: Ensure PostgreSQL dedicated WAL directory is created
  ansible.builtin.file:
    path: "{{ postgresql_wal_dir }}"
    state: directory
    owner: postgres
    group: postgres
    mode: "0700"
  when: postgresql_wal_dir|length>0

- name: Ensure PostgreSQL server configuration is applied (postgresql.conf)
  ansible.builtin.template:
    src: "postgresql-{{ postgresql_release }}.conf.j2"
    dest: "{{ postgresql_config_dir }}/postgresql.conf"
    owner: postgres
    group: postgres
    mode: '0600'
  notify: Restart PostgreSQL

- name: Ensure PostgreSQL host-based access configuration is applied (pg_hba.conf)
  ansible.builtin.template:
    src: pg_hba.conf.j2
    dest: "{{ postgresql_config_dir }}/pg_hba.conf"
    owner: postgres
    group: postgres
    mode: '0600'
  notify: Reload PostgreSQL

- name: Ensure PostgreSQL User Name maps configuration is applied (pg_ident.conf)
  ansible.builtin.template:
    src: pg_ident.conf.j2
    dest: "{{ postgresql_config_dir }}/pg_ident.conf"
    owner: postgres
    group: postgres
    mode: '0600'
  notify: Reload PostgreSQL
